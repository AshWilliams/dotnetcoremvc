@{
    ViewData["Title"] = "Mi Proyecto .Net Core";
}
<link rel='stylesheet prefetch' href='//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.1.8/semantic.min.css'>
<style class="cp-pen-styles">#app {
  margin-top: 20px;
  margin-left: 15px;
  font-size: 16px;
}
.logo {
  color: darkblue;
}
.add-block {
  margin: 0;
  margin-left: -15px;
  padding: 15px;
  background-color: lightgray;
}
label.task {
  display: inline-block;
}
ul {
  list-style: none;
  display: block;
  padding: 0;
}
ul li {
  line-height: 1.7;
  padding-bottom: 5px;
  font-size: 1.2em;
  vertical-align: top;
}
.ui.checkbox label,
.ui.checkbox + label {
  display: inline-block;
}
.completed {
  opacity: 0.2;
  text-decoration: line-through;
}
h4 {
  display: inline-block;
  margin-bottom: 30px;
}
</style>

<div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="6000">
    <ol class="carousel-indicators">
        <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
        <li data-target="#myCarousel" data-slide-to="1"></li>
        <li data-target="#myCarousel" data-slide-to="2"></li>
        <li data-target="#myCarousel" data-slide-to="3"></li>
    </ol>
    <div class="carousel-inner" role="listbox">
        <div class="item active">
            <img src="~/images/banner1.svg" alt="ASP.NET" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how to build ASP.NET apps that can run anywhere.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525028&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner2.svg" alt="Visual Studio" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    There are powerful new features in Visual Studio for building modern web apps.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525030&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner3.svg" alt="Package Management" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Bring in libraries from NuGet, Bower, and npm, and automate tasks using Grunt or Gulp.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525029&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
        <div class="item">
            <img src="~/images/banner4.svg" alt="Microsoft Azure" class="img-responsive" />
            <div class="carousel-caption" role="option">
                <p>
                    Learn how Microsoft's Azure cloud platform allows you to build, deploy, and scale web apps.
                    <a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkID=525027&clcid=0x409">
                        Learn More
                    </a>
                </p>
            </div>
        </div>
    </div>
    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>
<script src='//cdnjs.cloudflare.com/ajax/libs/vue/1.0.21/vue.js'></script>
<script src='//cdn.firebase.com/js/client/2.2.1/firebase.js'></script>
<script src='//cdn.jsdelivr.net/vuefire/1.0.0/vuefire.js''></script>

<div class="row">
    <div id="app">
        <h1 class="blue ui header">Mi Lista de Tareas</h1> <h4 v-show="remaining > 0">Tienes {{ remaining }} tareas sin completar<span v-show="remaining > 1">s</span>. </h3> <button @@click.prevent="archiveTasks(todos)" class="tiny ui blue button" v-show="completed > 0">Archive Completed Tasks</button>
        <div class="add-block">
            <div class="ui action input">
            <input type="text" placeholder="Add a task" v-model="newTodo" autofocus />
            <button class="ui teal right labeled icon button" @@click.prevent="addTask">
                <i class="plus icon"></i> Nueva Tarea
            </button>
            </div>
        </div>
        <ul>
            <li v-for="todo in todos">
            <div class="ui checkbox checked">
                <input type="checkbox" @@click="completeTask(todo)" :checked="todo.completed" /> <label :class="todo">{{ todo.task }}</label>
                <a class="tiny ui red image label" @@click.prevent="deleteTask(todo['.key'])"> Eliminar </a>
            </div>
            </li>
        </ul>
    </div>
</div>
    
    
    
</div>

<script >
//We'll remove this later in order to use cosmosdb as our persistent storage instead of firebase
  var baseURL = '//vue-todo.firebaseio.com/',
  Tasks = new Firebase(baseURL + 'todos'),

  app = new Vue({
  
  el: '#app',
  
  data: {
    
    newTodo: ''
  },
  
  firebase: {
    
    todos: Tasks.limitToLast(25)
  },
  
  computed: {
    
    remaining: function () {
      
      var uncompleted = 0;

      for (var index in this.todos) {
        
        if(!this.todos[index].completed) {
          uncompleted++;
        }
      }
      return uncompleted; 
    },
    
    completed: function () {
      
      var completed = 0;
      
      for (var index in this.todos) {
        if(this.todos[index].completed) {
          completed++;
        }
      }
      return completed;
    }
  },
  
  methods: {
    
    addTask: function () {
      
      if (this.newTodo !== '') {
        
        Tasks.push({
          task: this.newTodo,
          completed: false
        });
        this.newTodo = '';
      }
    },
    
    completeTask: function(todo) {
      
      if(!todo.completed) {
        todo.completed = true;
      } else {
        todo.completed = false;
      }
      Tasks.child(todo['.key']).update({ completed: todo.completed });
    },
    
    deleteTask: function (key) {
      
      Tasks.child(key).remove();
    },
    
    archiveTasks: function (todos) {
      
      for (var n = 0; n < todos.length; n++) {
        
        if(todos[n].completed) {

          var key = todos[n]['.key'];
  
          Tasks.child(key).remove();
        }
      }
    }
  }
});

</script>
